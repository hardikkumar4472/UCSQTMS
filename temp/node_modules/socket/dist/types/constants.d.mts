import registryConstants from '@socketsecurity/registry/lib/constants';
import type { Agent } from './utils/package-environment.mts';
import type { Remap } from '@socketsecurity/registry/lib/objects';
declare const AT_LATEST: "@latest", BIOME_JSON: "biome.json", CI: "CI", COLUMN_LIMIT: 80, EMPTY_FILE: "/* empty */\n", ESLINT_CONFIG_JS: "eslint.config.js", ESNEXT: "esnext", EXT_CJS: ".cjs", EXT_CMD: ".cmd", EXT_CTS: ".cts", EXT_DTS: ".d.ts", EXT_JS: ".js", EXT_JSON: ".json", EXT_LOCK: ".lock", EXT_LOCKB: ".lockb", EXT_MD: ".md", EXT_MJS: ".mjs", EXT_MTS: ".mts", EXT_PS1: ".ps1", EXTENSIONS: "extensions", EXTENSIONS_JSON: "extensions.json", GITIGNORE: ".gitignore", HIDDEN_PACKAGE_LOCK_JSON: ".package-lock.json", LATEST: "latest", LICENSE: "LICENSE", LICENSE_GLOB: "LICEN[CS]E{[.-]*,}", LICENSE_GLOB_RECURSIVE: "**/LICEN[CS]E{[.-]*,}", LICENSE_ORIGINAL: "LICENSE.original", LICENSE_ORIGINAL_GLOB: "*.original{.*,}", LICENSE_ORIGINAL_GLOB_RECURSIVE: "**/*.original{.*,}", LOOP_SENTINEL: 1000000, MANIFEST_JSON: "manifest.json", MIT: "MIT", NODE_AUTH_TOKEN: "NODE_AUTH_TOKEN", NODE_ENV: "NODE_ENV", NODE_MODULES: "node_modules", NODE_MODULES_GLOB_RECURSIVE: "**/node_modules", NODE_WORKSPACES: "node_workspaces", NPM: "npm", NPX: "npx", OVERRIDES: "overrides", PACKAGE_DEFAULT_VERSION: "1.0.0", PACKAGE_JSON: "package.json", PACKAGE_LOCK_JSON: "package-lock.json", PNPM: "pnpm", PRE_COMMIT: "PRE_COMMIT", README_GLOB: "README{.*,}", README_GLOB_RECURSIVE: "**/README{.*,}", REGISTRY_SCOPE_DELIMITER: "__", README_MD: "README.md", REGISTRY: "registry", RESOLUTIONS: "resolutions", SOCKET_GITHUB_ORG: "SocketDev", SOCKET_IPC_HANDSHAKE: "SOCKET_IPC_HANDSHAKE", SOCKET_OVERRIDE_SCOPE: "@socketoverride", SOCKET_PUBLIC_API_TOKEN: string, SOCKET_REGISTRY_NPM_ORG: "socketregistry", SOCKET_REGISTRY_PACKAGE_NAME: "@socketsecurity/registry", SOCKET_REGISTRY_REPO_NAME: "socket-registry", SOCKET_REGISTRY_SCOPE: "@socketregistry", SOCKET_SECURITY_SCOPE: "@socketsecurity", UNLICENCED: "UNLICENCED", UNLICENSED: "UNLICENSED", UTF8: "utf8", VITEST: "VITEST", YARN_LOCK: "yarn.lock";
export type RegistryEnv = typeof registryConstants.ENV;
export type RegistryInternals = (typeof registryConstants)['Symbol(kInternalsSymbol)'];
export type Sentry = any;
export type Internals = Remap<Omit<RegistryInternals, 'getIpc'> & Readonly<{
    getIpc: {
        (): Promise<IpcObject>;
        <K extends keyof IpcObject | undefined>(key?: K | undefined): Promise<K extends keyof IpcObject ? IpcObject[K] : IpcObject>;
    };
    getSentry: () => Sentry;
    setSentry(Sentry: Sentry): boolean;
}>>;
export type ENV = Remap<RegistryEnv & Readonly<{
    DISABLE_GITHUB_CACHE: boolean;
    GITHUB_API_URL: string;
    GITHUB_BASE_REF: string;
    GITHUB_REF_NAME: string;
    GITHUB_REF_TYPE: string;
    GITHUB_REPOSITORY: string;
    GITHUB_SERVER_URL: string;
    GITHUB_TOKEN: string;
    INLINED_SOCKET_CLI_COANA_TECH_CLI_VERSION: string;
    INLINED_SOCKET_CLI_CYCLONEDX_CDXGEN_VERSION: string;
    INLINED_SOCKET_CLI_HOMEPAGE: string;
    INLINED_SOCKET_CLI_LEGACY_BUILD: string;
    INLINED_SOCKET_CLI_NAME: string;
    INLINED_SOCKET_CLI_PUBLISHED_BUILD: string;
    INLINED_SOCKET_CLI_SENTRY_BUILD: string;
    INLINED_SOCKET_CLI_VERSION: string;
    INLINED_SOCKET_CLI_VERSION_HASH: string;
    INLINED_SOCKET_CLI_SYNP_VERSION: string;
    LOCALAPPDATA: string;
    NODE_COMPILE_CACHE: string;
    NODE_EXTRA_CA_CERTS: string;
    PATH: string;
    SOCKET_CLI_ACCEPT_RISKS: boolean;
    SOCKET_CLI_API_BASE_URL: string;
    SOCKET_CLI_API_PROXY: string;
    SOCKET_CLI_API_TIMEOUT: number;
    SOCKET_CLI_API_TOKEN: string;
    SOCKET_CLI_CONFIG: string;
    SOCKET_CLI_GIT_USER_EMAIL: string;
    SOCKET_CLI_GIT_USER_NAME: string;
    SOCKET_CLI_GITHUB_TOKEN: string;
    SOCKET_CLI_NO_API_TOKEN: boolean;
    SOCKET_CLI_NPM_PATH: string;
    SOCKET_CLI_ORG_SLUG: string;
    SOCKET_CLI_VIEW_ALL_RISKS: boolean;
    TERM: string;
    XDG_DATA_HOME: string;
}>>;
export type IpcObject = Readonly<{
    SOCKET_CLI_FIX?: string | undefined;
    SOCKET_CLI_OPTIMIZE?: boolean | undefined;
    SOCKET_CLI_SHADOW_ACCEPT_RISKS?: boolean | undefined;
    SOCKET_CLI_SHADOW_API_TOKEN?: string | undefined;
    SOCKET_CLI_SHADOW_BIN?: string | undefined;
    SOCKET_CLI_SHADOW_PROGRESS?: boolean | undefined;
    SOCKET_CLI_SHADOW_SILENT?: boolean | undefined;
}>;
export type ProcessEnv = {
    [K in keyof ENV]?: string;
};
declare const ALERT_TYPE_CRITICAL_CVE = "criticalCVE";
declare const ALERT_TYPE_CVE = "cve";
declare const ALERT_TYPE_MEDIUM_CVE = "mediumCVE";
declare const ALERT_TYPE_MILD_CVE = "mildCVE";
declare const API_V0_URL = "https://api.socket.dev/v0/";
declare const BUN = "bun";
declare const DOT_SOCKET = ".socket";
declare const DOT_SOCKET_DOT_FACTS_JSON = ".socket.facts.json";
declare const DRY_RUN_LABEL = "[DryRun]";
declare const DRY_RUN_BAILING_NOW = "[DryRun]: Bailing now";
declare const DRY_RUN_NOT_SAVING = "[DryRun]: Not saving";
declare const EMPTY_VALUE = "<empty>";
declare const FOLD_SETTING_FILE = "file";
declare const FOLD_SETTING_NONE = "none";
declare const FOLD_SETTING_PKG = "pkg";
declare const FOLD_SETTING_VERSION = "version";
declare const GQL_PAGE_SENTINEL = 100;
declare const GQL_PR_STATE_CLOSED = "CLOSED";
declare const GQL_PR_STATE_MERGED = "MERGED";
declare const GQL_PR_STATE_OPEN = "OPEN";
declare const LOCALAPPDATA = "LOCALAPPDATA";
declare const NPM_BUGGY_OVERRIDES_PATCHED_VERSION = "11.2.0";
declare const NPM_REGISTRY_URL = "https://registry.npmjs.org";
declare const OUTPUT_JSON = "json";
declare const OUTPUT_MARKDOWN = "markdown";
declare const OUTPUT_TEXT = "text";
declare const REDACTED = "<redacted>";
declare const REPORT_LEVEL_DEFER = "defer";
declare const REPORT_LEVEL_ERROR = "error";
declare const REPORT_LEVEL_IGNORE = "ignore";
declare const REPORT_LEVEL_MONITOR = "monitor";
declare const REPORT_LEVEL_WARN = "warn";
declare const SOCKET_CLI_ACCEPT_RISKS = "SOCKET_CLI_ACCEPT_RISKS";
declare const SOCKET_CLI_BIN_NAME = "socket";
declare const SOCKET_CLI_ISSUES_URL = "https://github.com/SocketDev/socket-cli/issues";
declare const SOCKET_CLI_SHADOW_ACCEPT_RISKS = "SOCKET_CLI_SHADOW_ACCEPT_RISKS";
declare const SOCKET_CLI_SHADOW_API_TOKEN = "SOCKET_CLI_SHADOW_API_TOKEN";
declare const SOCKET_CLI_SHADOW_BIN = "SOCKET_CLI_SHADOW_BIN";
declare const SOCKET_CLI_SHADOW_PROGRESS = "SOCKET_CLI_SHADOW_PROGRESS";
declare const SOCKET_CLI_SHADOW_SILENT = "SOCKET_CLI_SHADOW_SILENT";
declare const SOCKET_CLI_VIEW_ALL_RISKS = "SOCKET_CLI_VIEW_ALL_RISKS";
declare const SOCKET_DEFAULT_BRANCH = "socket-default-branch";
declare const SOCKET_DEFAULT_REPOSITORY = "socket-default-repository";
declare const SOCKET_WEBSITE_URL = "https://socket.dev";
declare const UNKNOWN_ERROR = "Unknown error";
declare const UNKNOWN_VALUE = "<unknown>";
declare const V1_MIGRATION_GUIDE_URL = "https://docs.socket.dev/docs/v1-migration-guide";
declare const VLT = "vlt";
declare const YARN = "yarn";
declare const YARN_BERRY = "yarn/berry";
declare const YARN_CLASSIC = "yarn/classic";
export type Constants = Remap<Omit<typeof registryConstants, 'Symbol(kInternalsSymbol)' | 'ENV' | 'ipcObject'> & {
    readonly 'Symbol(kInternalsSymbol)': Internals;
    readonly ALERT_TYPE_CRITICAL_CVE: typeof ALERT_TYPE_CRITICAL_CVE;
    readonly ALERT_TYPE_CVE: typeof ALERT_TYPE_CVE;
    readonly ALERT_TYPE_MEDIUM_CVE: typeof ALERT_TYPE_MEDIUM_CVE;
    readonly ALERT_TYPE_MILD_CVE: typeof ALERT_TYPE_MILD_CVE;
    readonly API_V0_URL: typeof API_V0_URL;
    readonly BUN: typeof BUN;
    readonly EMPTY_VALUE: typeof EMPTY_VALUE;
    readonly ENV: ENV;
    readonly DOT_SOCKET: typeof DOT_SOCKET;
    readonly DOT_SOCKET_DOT_FACTS_JSON: typeof DOT_SOCKET_DOT_FACTS_JSON;
    readonly DRY_RUN_LABEL: typeof DRY_RUN_LABEL;
    readonly DRY_RUN_BAILING_NOW: typeof DRY_RUN_BAILING_NOW;
    readonly DRY_RUN_NOT_SAVING: typeof DRY_RUN_NOT_SAVING;
    readonly FOLD_SETTING_FILE: typeof FOLD_SETTING_FILE;
    readonly FOLD_SETTING_NONE: typeof FOLD_SETTING_NONE;
    readonly FOLD_SETTING_PKG: typeof FOLD_SETTING_PKG;
    readonly FOLD_SETTING_VERSION: typeof FOLD_SETTING_VERSION;
    readonly GQL_PAGE_SENTINEL: typeof GQL_PAGE_SENTINEL;
    readonly GQL_PR_STATE_CLOSED: typeof GQL_PR_STATE_CLOSED;
    readonly GQL_PR_STATE_MERGED: typeof GQL_PR_STATE_MERGED;
    readonly GQL_PR_STATE_OPEN: typeof GQL_PR_STATE_OPEN;
    readonly NODE_MODULES: typeof NODE_MODULES;
    readonly NPM_BUGGY_OVERRIDES_PATCHED_VERSION: typeof NPM_BUGGY_OVERRIDES_PATCHED_VERSION;
    readonly NPM_REGISTRY_URL: typeof NPM_REGISTRY_URL;
    readonly NPM: typeof NPM;
    readonly NPX: typeof NPX;
    readonly OUTPUT_JSON: typeof OUTPUT_JSON;
    readonly OUTPUT_MARKDOWN: typeof OUTPUT_MARKDOWN;
    readonly OUTPUT_TEXT: typeof OUTPUT_TEXT;
    readonly PACKAGE_JSON: typeof PACKAGE_JSON;
    readonly REDACTED: typeof REDACTED;
    readonly REPORT_LEVEL_DEFER: typeof REPORT_LEVEL_DEFER;
    readonly REPORT_LEVEL_ERROR: typeof REPORT_LEVEL_ERROR;
    readonly REPORT_LEVEL_IGNORE: typeof REPORT_LEVEL_IGNORE;
    readonly REPORT_LEVEL_MONITOR: typeof REPORT_LEVEL_MONITOR;
    readonly REPORT_LEVEL_WARN: typeof REPORT_LEVEL_WARN;
    readonly SOCKET_CLI_ACCEPT_RISKS: typeof SOCKET_CLI_ACCEPT_RISKS;
    readonly SOCKET_CLI_BIN_NAME: typeof SOCKET_CLI_BIN_NAME;
    readonly SOCKET_CLI_ISSUES_URL: typeof SOCKET_CLI_ISSUES_URL;
    readonly SOCKET_CLI_SHADOW_ACCEPT_RISKS: typeof SOCKET_CLI_SHADOW_ACCEPT_RISKS;
    readonly SOCKET_CLI_SHADOW_API_TOKEN: typeof SOCKET_CLI_SHADOW_API_TOKEN;
    readonly SOCKET_CLI_SHADOW_BIN: typeof SOCKET_CLI_SHADOW_BIN;
    readonly SOCKET_CLI_SHADOW_PROGRESS: typeof SOCKET_CLI_SHADOW_PROGRESS;
    readonly SOCKET_CLI_SHADOW_SILENT: typeof SOCKET_CLI_SHADOW_SILENT;
    readonly SOCKET_CLI_VIEW_ALL_RISKS: typeof SOCKET_CLI_VIEW_ALL_RISKS;
    readonly SOCKET_DEFAULT_BRANCH: typeof SOCKET_DEFAULT_BRANCH;
    readonly SOCKET_DEFAULT_REPOSITORY: typeof SOCKET_DEFAULT_REPOSITORY;
    readonly SOCKET_WEBSITE_URL: typeof SOCKET_WEBSITE_URL;
    readonly UNKNOWN_ERROR: typeof UNKNOWN_ERROR;
    readonly UNKNOWN_VALUE: typeof UNKNOWN_VALUE;
    readonly V1_MIGRATION_GUIDE_URL: typeof V1_MIGRATION_GUIDE_URL;
    readonly VLT: typeof VLT;
    readonly YARN: typeof YARN;
    readonly YARN_BERRY: typeof YARN_BERRY;
    readonly YARN_CLASSIC: typeof YARN_CLASSIC;
    readonly bashRcPath: string;
    readonly binCliPath: string;
    readonly binPath: string;
    readonly blessedContribPath: string;
    readonly blessedOptions: {
        smartCSR: boolean;
        term: string;
        useBCE: boolean;
    };
    readonly blessedPath: string;
    readonly distCliPath: string;
    readonly distPath: string;
    readonly externalPath: string;
    readonly githubCachePath: string;
    readonly homePath: string;
    readonly instrumentWithSentryPath: string;
    readonly ipcObject: IpcObject;
    readonly minimumVersionByAgent: Map<Agent, string>;
    readonly nmBinPath: string;
    readonly nodeDebugFlags: string[];
    readonly nodeHardenFlags: string[];
    readonly nodeMemoryFlags: string[];
    readonly npmCachePath: string;
    readonly npmGlobalPrefix: string;
    readonly npmNmNodeGypPath: string;
    readonly processEnv: ProcessEnv;
    readonly rootPath: string;
    readonly shadowBinPath: string;
    readonly shadowNpmBinPath: string;
    readonly shadowNpmInjectPath: string;
    readonly socketAppDataPath: string;
    readonly socketCachePath: string;
    readonly socketRegistryPath: string;
    readonly zshRcPath: string;
}>;
declare const constants: Constants;
export { ALERT_TYPE_CRITICAL_CVE, ALERT_TYPE_CVE, ALERT_TYPE_MEDIUM_CVE, ALERT_TYPE_MILD_CVE, API_V0_URL, AT_LATEST, BIOME_JSON, BUN, CI, COLUMN_LIMIT, DOT_SOCKET, DOT_SOCKET_DOT_FACTS_JSON, DRY_RUN_BAILING_NOW, DRY_RUN_LABEL, DRY_RUN_NOT_SAVING, EMPTY_FILE, EMPTY_VALUE, ESLINT_CONFIG_JS, ESNEXT, EXTENSIONS, EXTENSIONS_JSON, EXT_CJS, EXT_CMD, EXT_CTS, EXT_DTS, EXT_JS, EXT_JSON, EXT_LOCK, EXT_LOCKB, EXT_MD, EXT_MJS, EXT_MTS, EXT_PS1, FOLD_SETTING_FILE, FOLD_SETTING_NONE, FOLD_SETTING_PKG, FOLD_SETTING_VERSION, GITIGNORE, GQL_PAGE_SENTINEL, GQL_PR_STATE_CLOSED, GQL_PR_STATE_MERGED, GQL_PR_STATE_OPEN, HIDDEN_PACKAGE_LOCK_JSON, LATEST, LICENSE, LICENSE_GLOB, LICENSE_GLOB_RECURSIVE, LICENSE_ORIGINAL, LICENSE_ORIGINAL_GLOB, LICENSE_ORIGINAL_GLOB_RECURSIVE, LOCALAPPDATA, LOOP_SENTINEL, MANIFEST_JSON, MIT, NODE_AUTH_TOKEN, NODE_ENV, NODE_MODULES, NODE_MODULES_GLOB_RECURSIVE, NODE_WORKSPACES, NPM, NPM_BUGGY_OVERRIDES_PATCHED_VERSION, NPM_REGISTRY_URL, NPX, OUTPUT_JSON, OUTPUT_MARKDOWN, OUTPUT_TEXT, OVERRIDES, PACKAGE_DEFAULT_VERSION, PACKAGE_JSON, PACKAGE_LOCK_JSON, PNPM, PRE_COMMIT, README_GLOB, README_GLOB_RECURSIVE, README_MD, REDACTED, REGISTRY, REGISTRY_SCOPE_DELIMITER, REPORT_LEVEL_DEFER, REPORT_LEVEL_ERROR, REPORT_LEVEL_IGNORE, REPORT_LEVEL_MONITOR, REPORT_LEVEL_WARN, RESOLUTIONS, SOCKET_CLI_ACCEPT_RISKS, SOCKET_CLI_BIN_NAME, SOCKET_CLI_ISSUES_URL, SOCKET_CLI_SHADOW_ACCEPT_RISKS, SOCKET_CLI_SHADOW_API_TOKEN, SOCKET_CLI_SHADOW_BIN, SOCKET_CLI_SHADOW_PROGRESS, SOCKET_CLI_SHADOW_SILENT, SOCKET_CLI_VIEW_ALL_RISKS, SOCKET_DEFAULT_BRANCH, SOCKET_DEFAULT_REPOSITORY, SOCKET_GITHUB_ORG, SOCKET_IPC_HANDSHAKE, SOCKET_OVERRIDE_SCOPE, SOCKET_PUBLIC_API_TOKEN, SOCKET_REGISTRY_NPM_ORG, SOCKET_REGISTRY_PACKAGE_NAME, SOCKET_REGISTRY_REPO_NAME, SOCKET_REGISTRY_SCOPE, SOCKET_SECURITY_SCOPE, SOCKET_WEBSITE_URL, UNKNOWN_ERROR, UNKNOWN_VALUE, UNLICENCED, UNLICENSED, UTF8, V1_MIGRATION_GUIDE_URL, VITEST, VLT, YARN, YARN_BERRY, YARN_CLASSIC, YARN_LOCK, };
export default constants;
//# sourceMappingURL=constants.d.mts.map