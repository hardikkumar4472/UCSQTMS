'use strict'

const getIpc = /*@__PURE__*/ require('./get-ipc')
const { createConstantsObject } = /*@__PURE__*/ require('../objects')
const { toKebabCase } = /*@__PURE__*/ require('../strings')

const props = {
  // Lazily defined values are initialized as `undefined` to keep their key order.
  AT_LATEST: '@latest',
  BIOME_JSON: 'biome.json',
  CI: 'CI',
  COLUMN_LIMIT: 80,
  DARWIN: undefined,
  EMPTY_FILE: '/* empty */\n',
  ENV: undefined,
  ESLINT_CONFIG_JS: 'eslint.config.js',
  ESNEXT: 'esnext',
  EXT_CJS: '.cjs',
  EXT_CMD: '.cmd',
  EXT_CTS: '.cts',
  EXT_DTS: '.d.ts',
  EXT_JS: '.js',
  EXT_JSON: '.json',
  EXT_LOCK: '.lock',
  EXT_LOCKB: '.lockb',
  EXT_MD: '.md',
  EXT_MJS: '.mjs',
  EXT_MTS: '.mts',
  EXT_PS1: '.ps1',
  EXTENSIONS: 'extensions',
  EXTENSIONS_JSON: 'extensions.json',
  GITIGNORE: '.gitignore',
  HIDDEN_PACKAGE_LOCK_JSON: '.package-lock.json',
  LATEST: 'latest',
  LICENSE: 'LICENSE',
  LICENSE_GLOB: 'LICEN[CS]E{[.-]*,}',
  LICENSE_GLOB_RECURSIVE: '**/LICEN[CS]E{[.-]*,}',
  LICENSE_ORIGINAL: 'LICENSE.original',
  LICENSE_ORIGINAL_GLOB: '*.original{.*,}',
  LICENSE_ORIGINAL_GLOB_RECURSIVE: '**/*.original{.*,}',
  LOOP_SENTINEL: 1000000,
  MANIFEST_JSON: 'manifest.json',
  MIT: 'MIT',
  NODE_AUTH_TOKEN: 'NODE_AUTH_TOKEN',
  NODE_ENV: 'NODE_ENV',
  NODE_MODULES: 'node_modules',
  NODE_MODULES_GLOB_RECURSIVE: '**/node_modules',
  NODE_WORKSPACES: 'node_workspaces',
  NODE_VERSION: undefined,
  NPM: 'npm',
  NPX: 'npx',
  OVERRIDES: 'overrides',
  PACKAGE_DEFAULT_SOCKET_CATEGORIES: undefined,
  PACKAGE_DEFAULT_NODE_RANGE: undefined,
  PACKAGE_DEFAULT_VERSION: '1.0.0',
  PACKAGE_JSON: 'package.json',
  PACKAGE_LOCK_JSON: 'package-lock.json',
  PNPM: 'pnpm',
  PRE_COMMIT: 'PRE_COMMIT',
  README_GLOB: 'README{.*,}',
  README_GLOB_RECURSIVE: '**/README{.*,}',
  README_MD: 'README.md',
  REGISTRY_SCOPE_DELIMITER: '__',
  REGISTRY: 'registry',
  RESOLUTIONS: 'resolutions',
  SOCKET_GITHUB_ORG: 'SocketDev',
  SOCKET_IPC_HANDSHAKE: 'SOCKET_IPC_HANDSHAKE',
  SOCKET_OVERRIDE_SCOPE: '@socketoverride',
  SOCKET_PUBLIC_API_TOKEN:
    'sktsec_t_--RAN5U4ivauy4w37-6aoKyYPDt5ZbaT5JBVMqiwKo_api',
  SOCKET_REGISTRY_NPM_ORG: 'socketregistry',
  SOCKET_REGISTRY_PACKAGE_NAME: '@socketsecurity/registry',
  SOCKET_REGISTRY_REPO_NAME: 'socket-registry',
  SOCKET_REGISTRY_SCOPE: '@socketregistry',
  SOCKET_SECURITY_SCOPE: '@socketsecurity',
  SUPPORTS_NODE_COMPILE_CACHE_API: undefined,
  SUPPORTS_NODE_COMPILE_CACHE_ENV_VAR: undefined,
  SUPPORTS_NODE_DISABLE_WARNING_FLAG: undefined,
  SUPPORTS_NODE_PERMISSION_FLAG: undefined,
  SUPPORTS_NODE_REQUIRE_MODULE: undefined,
  SUPPORTS_NODE_RUN: undefined,
  SUPPORTS_PROCESS_SEND: undefined,
  TEMPLATE_CJS: 'cjs',
  TEMPLATE_CJS_BROWSER: 'cjs-browser',
  TEMPLATE_CJS_ESM: 'cjs-esm',
  TEMPLATE_ES_SHIM_CONSTRUCTOR: 'es-shim-constructor',
  TEMPLATE_ES_SHIM_PROTOTYPE_METHOD: 'es-shim-prototype-method',
  TEMPLATE_ES_SHIM_STATIC_METHOD: 'es-shim-static-method',
  TSCONFIG_JSON: 'tsconfig.json',
  UNDEFINED_TOKEN: undefined,
  UNLICENCED: 'UNLICENCED',
  UNLICENSED: 'UNLICENSED',
  UTF8: 'utf8',
  VITEST: 'VITEST',
  WIN32: undefined,
  YARN_LOCK: 'yarn.lock',
  abortController: undefined,
  abortSignal: undefined,
  copyLeftLicenses: undefined,
  execPath: undefined,
  ipcObject: undefined,
  lifecycleScriptNames: undefined,
  maintainedNodeVersions: undefined,
  nodeDebugFlags: undefined,
  nodeHardenFlags: undefined,
  nodeNoWarningsFlags: undefined,
  npmExecPath: undefined,
  npmRealExecPath: undefined,
  packageExtensions: undefined,
  packumentCache: undefined,
  pacoteCachePath: undefined,
  parseArgsConfig: undefined,
  skipTestsByEcosystem: undefined,
  spinner: undefined,
  tsLibsAvailable: undefined,
  tsTypesAvailable: undefined,
  win32EnsureTestsByEcosystem: undefined
}

module.exports = createConstantsObject(props, {
  getters: Object.fromEntries(
    Object.keys(props)
      .filter(k => props[k] === undefined)
      .map(k => [k, () => require(`./${toKebabCase(k)}`)])
  ),
  internals: {
    createConstantsObject,
    getIpc
  }
})
